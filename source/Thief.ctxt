#BlueJ class context
comment0.target=Thief
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Thief\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=x\ y
comment1.target=Thief(int,\ int)
comment1.text=\r\nConstructir\ clase\ Thief\r\n@author\ Montse\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ Thief\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment3.params=
comment3.target=void\ updateImage()
comment3.text=\r\n\ Cambiar\ la\ imagen\ del\ jugador\ para\ que\ parezca\ como\ si\ se\ estuviera\ moviendo\r\n\ TODO\ Agregar\ las\ animaciones\ para\ cuando\ el\ jugador\ est\u00E1\ quiero\r\n\ @author\ Gaspar\r\n
comment4.params=direction
comment4.target=boolean\ canMoveTowards(Direction)
comment4.text=\r\n\ M\u00E9todo\ para\ saber\ si\ el\ jugador\ puede\ moverse\ hacia\ la\ posici\u00F3n\ dada.\r\n\ @author\ Mauricio,\ Gaspar\r\n\ @param\ direction\ Direcci\u00F3n\ hacia\ donde\ se\ quiere\ mover\ el\ jugador.\r\n\ @return\ true\ si\ el\ jugador\ se\ puede\ mover\ hacia\ all\u00E1\r\n
comment5.params=direccion
comment5.target=void\ changeDirectionn(int)
comment5.text=\r\n\ M\u00E9todo\ para\ cambiar\ la\ direcci\u00F3n\ y\ posici\u00F3n\ del\ ratero.\r\n\ @author\ Montse\r\n
comment6.params=
comment6.target=void\ changeDirection()
comment7.params=
comment7.target=int\ getPosX()
comment8.params=
comment8.target=int\ getPosY()
comment9.params=
comment9.target=void\ moverRatero()
comment9.text=FIXME\r\n\ Se\ supone\ q\ tal\ cual\ debe\ hacer\ q\ el\ ratero\ se\ mueva,\ pero\ algo\ no\ cuadra\ jajaj\r\n\ @Montse\r\n
numComments=10
